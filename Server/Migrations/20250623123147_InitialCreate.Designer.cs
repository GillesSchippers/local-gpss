// <auto-generated />
using System;
using GPSS_Server.Datastore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace localgpss.Migrations
{
    [DbContext(typeof(GpssDbContext))]
    [Migration("20250623123147_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Models.Bundle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DownloadCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("int");

                    b.Property<bool>("Legal")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MaxGen")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("MinGen")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DownloadCode")
                        .IsUnique();

                    b.ToTable("Bundles");
                });

            modelBuilder.Entity("Models.BundlePokemon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BundleId")
                        .HasColumnType("bigint");

                    b.Property<long>("PokemonId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BundleId");

                    b.HasIndex("PokemonId");

                    b.ToTable("BundlePokemons");
                });

            modelBuilder.Entity("Models.Pokemon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Base64")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Base64Hash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("DownloadCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("int");

                    b.Property<string>("Generation")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<bool>("Legal")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UploadDateTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Base64Hash")
                        .IsUnique();

                    b.HasIndex("DownloadCode")
                        .IsUnique();

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("Models.BundlePokemon", b =>
                {
                    b.HasOne("Models.Bundle", "Bundle")
                        .WithMany("BundlePokemons")
                        .HasForeignKey("BundleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bundle");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Models.Bundle", b =>
                {
                    b.Navigation("BundlePokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
